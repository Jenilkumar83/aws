Databases Intro:: Storing data on disk (EFS, EBS, EC2 Instance Store, S3) can have its limits

Relational Databases:
-Looks just like Excel spreadsheets, with links between them!
-Can use the SQL language to perform queries / lookups

NoSQL Databases:
-non relational databases
-NoSQL databases are purpose built for specific data models and have flexible schemas for building modern applications.
-Examples: Key-value, document, graph, in-memory, search databases

JSON = JavaScript Object Notation:
-JSON is a common form of data that fits into a NoSQL model
-Data can be nested, Fields can change over time

AWS RDS:(RDS stands for Relational Database Service):
-It’s a managed DB service for DB use SQL as a query language.

Amazon Aurora:
-Aurora is a proprietary technology from AWS (not open sourced)
-PostgreSQL and MySQL are both supported as Aurora DB
Amazon Aurora Serverless:
-Automated database instantiation and auto-scaling based on actual usage
-No capacity planning needed

RDS Deployments: Read Replicas, Multi-AZ, Multi-region

Amazon ElastiCache Overview:
-Caches are in-memory databases with high performance, low latency
-Helps reduce load off databases for read intensive workloads

DynamoDB:
-NoSQL, distributed “serverless” database
-Single-digit millisecond latency – low latency retrieval
DynamoDB Accelerator - DAX:
-Fully Managed in-memory cache for DynamoDB
-DAX is only used for and is integrated with DynamoDB

Redshift:
-Redshift is based on PostgreSQL, but it’s not used for OLTP
-It’s OLAP – online analytical processing (analytics and data warehousing)
-Columnar storage of data (instead of row based)
Redshift Serverless:
-Automatically provisions and scales data warehouse underlying capacity

Amazon EMR:(Elastic MapReduce):
-EMR helps creating Hadoop clusters (Big Data) to analyze and process vast amount of data
-hundreds of EC2 instances
-Use cases: data processing, machine learning, web indexing, big data…

Amazon Athena:
-Serverless query service to analyze data stored in Amazon S3

Amazon QuickSight:
-Serverless machine learning-powered business intelligence service to create interactive dashboards

DocumentDB:
-Aurora is an “AWS-implementation” of PostgreSQL / MySQL …
-DocumentDB is the same for MongoDB (which is a NoSQL database)

Amazon Neptune:
-Fully managed graph database

Amazon Timestream:
-Fully managed, fast, scalable, serverless time series database

Amazon QLDB:(Quantum Ledger Database):
-A ledger is a book recording financial transactions
-review history of all the changes made to your application data over time
-Immutable system: no entry can be removed or modified, cryptographically verifiable

Amazon Managed Blockchain:
-Blockchain makes it possible to build applications where multiple parties can execute transactions without the need for a trusted, central authority

AWS Glue:
-Managed extract, transform, and load (ETL) service
-Fully serverless


DMS – Database Migration Service::
-Quickly and securely migrate databases to AWS, resilient, self healing
-The source database remains available during the migration

Summary:
• Relational Databases - OLTP: RDS & Aurora (SQL)
• Differences between Multi-AZ, Read Replicas, Multi-Region
• In-memory Database: ElastiCache
• Key/Value Database: DynamoDB (serverless) & DAX (cache for DynamoDB)
• Warehouse - OLAP: Redshift (SQL)
• Hadoop Cluster: EMR
• Athena: query data on Amazon S3 (serverless & SQL)
• QuickSight: dashboards on your data (serverless)
• DocumentDB:“Aurora for MongoDB” (JSON – NoSQL database)
• Amazon QLDB: Financial Transactions Ledger (immutable journal, cryptographically verifiable)
• Amazon Managed Blockchain: managed Hyperledger Fabric & Ethereum blockchains
• Glue: Managed ETL (Extract Transform Load) and Data Catalog service
• Database Migration: DMS
• Neptune: graph database
• Timestream: time-series database

Which AWS service is an immutable ledger database?--QLDB
